pipeline {
    agent any

    environment {
        EC2_HOST = '52.90.96.54'
        EC2_USER = 'ec2-user'
    }

    stages {
        stage('Clone Repo') {
            steps {
                dir('app') {
                    git branch: 'main', url: 'https://github.com/250224-JavaReactAWS/Team-1'
                }
            }
        }

        stage('Build JAR with Maven') {
            steps {
                dir('app/RevStay') {
                    bat 'mvn clean package -DskipTests'
                }
            }
        }

        stage('SCP JAR to EC2') {
            steps {
                withCredentials([file(credentialsId: 'SSH-KEY', variable: 'EC2_KEY')]) {
                    bat """
                        scp -i "%EC2_KEY%" -o StrictHostKeyChecking=no app/RevStay/target/app.jar ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/
                    """
                }
            }
        }

        stage('Check and Install Docker on EC2') {
            steps {
                withCredentials([file(credentialsId: 'SSH-KEY', variable: 'EC2_KEY')]) {
                    bat """
                        ssh -i "%EC2_KEY%" -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "if ! command -v docker > /dev/null; then echo Docker not found, installing... && sudo yum update -y && sudo amazon-linux-extras install docker -y && sudo service docker start && sudo usermod -aG docker ${EC2_USER}; else echo Docker is already installed; fi"
                    """
                }
            }
        }
         
        stage('Check if Docker Daemon is Running') {
            steps {
            withCredentials([file(credentialsId: 'SSH-KEY', variable: 'EC2_KEY')]) {
                bat """
                ssh -i "%EC2_KEY%" -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "if ! sudo systemctl is-active --quiet docker; then echo Docker daemon is not running, starting it... && sudo service docker start; else echo Docker daemon is already running; fi"
                """
            }
            }
        }

        stage('Build Docker Image on EC2') {
            steps {
                withCredentials([file(credentialsId: 'SSH-KEY', variable: 'EC2_KEY')]) {
                    bat """
                        ssh -i "%EC2_KEY%" -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "docker build -t revstay /home/${EC2_USER}/"
                    """
                }
            }
        }

        stage('Deploy Docker Container on EC2') {
            steps {
                withCredentials([file(credentialsId: 'SSH-KEY', variable: 'EC2_KEY')]) {
                    bat """
                        ssh -i "%EC2_KEY%" -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "docker stop revstay || true && docker rm revstay || true && docker run -d -p 8080:8080 --name revstay revstay"
                    """
                }
            }
        }
    }
}
